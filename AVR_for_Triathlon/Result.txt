对于第二个场景（即Speck_Sce2和Simon_Sce2的结果）
	1. 轮密钥和nonce放在Flash中，没有密钥扩展程序；
	2. 要加密的数据和计数器（counter)都存放在RAM中；采用的方式是nonce和counter先异或，再对结果进行加密最后与明文进行异或得到密文；因此nonce、counter的二进制位数等于一个block的大小；
	3. 没有解密的部分；
	4. 没有采用并行加密128bits的数据，结果对应的是加密64 bits明文；
对于第一个场景：
	1. 初始密钥和常量（比如Simon中的Z）放在Flash中；
	2. 要加密的数据、所有轮密钥、初始向量(vector)存放在RAM中；另外一些辅助数据也存放在RAM中，比如Speck中密钥扩展用到的L，Simon和Speck解密中需要临时保存密文(tempCipher)；
	3. 包括密钥扩展、加密、解密3部分；
	4. Encryption+Decryption(including key schedule)的结果是整个工程的编译或调试的结果；
	5. Encryption(without key schedule): Flash是加密部分指令条数乘以2，RAM表示存放在RAM中且只在加密部分使用到而没有在密钥扩展使用到的数据（即初始向量vector）,Time分别在加密前和加密结束时进行cycles记录，相减得到加密的时间；
	6. Decryption(without key schedule): Flash是解密部分指令条数乘以2，RAM表示存放在RAM中且只在解密部分使用到而没有在密钥扩展使用到的数据（即初始向量vector和保存临时密文的tempCipher）,Time分别在解密前和解密结束时进行cycles记录，相减得到解密的时间；

Speck_Sce2
	Flash: 378 bytes;
	RAM:   16 bytes;
	Time:  1368 cycles;

Simon_Sce2
	Flash: 448 bytes;
	RAM:   16 bytes;
	Time:  2177 cycles;


Speck_Sce1: the RAM of encryption (of decryption) is that used only in encryption (or decryption) but not used in key schedule.
	Flash: 636 bytes;
	RAM:   264 bytes;
	Time:  45114 cycles;
   Encryption:
	Flash: 180 bytes;
	RAM:   8 bytes(vector);
	Time:  18611(=22978-4367) cycles;
   Decryption:
	Flash: 224 bytes;
	RAM:   16 bytes(vector + tempCipher);
	Time:  22131(=45110-22979) cycles;

Simon_Sce1: the RAM of encryption (of decryption) is that used only in encryption (or decryption) but not used in key schedule.
	Flash: 664 bytes;
	RAM:   320 bytes;
	Time:  65931 cycles;
   Encryption:
	Flash: 180 bytes;
	RAM:   8 bytes(vector);
	Time:  30467(=34947-4480) cycles;
   Decryption:
	Flash: 216 bytes;
	RAM:   16 bytes(vector + tempCipher);
	Time:  30979(=65927-34948) cycles